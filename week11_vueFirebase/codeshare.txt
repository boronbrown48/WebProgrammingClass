/* 1 */
{
    "_id" : ObjectId("5aa1020ce2f50ebadb85d97a"),
    "firstName" : "Bob",
    "lastName" : "Cat",
    "email" : "bob@mail.com",
    "createdDate" : "2018-03-08T18:00:00.000Z"
}

/* 2 */
{
    "_id" : ObjectId("5aa1021ce2f50ebadb85d97f"),
    "firstName" : "Tom",
    "lastName" : "Cat",
    "email" : "bob@mail.com",
    "createdDate" : "2018-03-08T18:01:00.000Z"
}

/* 3 */
{
    "_id" : ObjectId("5aa13176ebe9b40749adc61f"),
    "firstName" : "John",
    "lastName" : "Doe",
    "email" : "john@mail.com",
    "createdDate" : ISODate("2018-03-08T12:49:58.882Z"),
    "__v" : 0
}

/* 4 */
{
    "_id" : ObjectId("5aa131d2ebe9b40749adc620"),
    "firstName" : "Jane",
    "lastName" : "Doe",
    "email" : "jane@mail.com",
    "createdDate" : ISODate("2018-03-08T12:51:30.009Z"),
    "__v" : 0
}

/* 5 */
{
    "_id" : ObjectId("5aa13eb02235da08f4bd3fb5"),
    "firstName" : "timmy",
    "lastName" : "time",
    "email" : "timmy@mail.com",
    "createdDate" : ISODate("2018-03-08T13:46:24.997Z"),
    "__v" : 0
}

/* 6 */
{
    "_id" : ObjectId("5aa14808550d8a0a7c2443b8"),
    "firstName" : "Robert",
    "lastName" : "Birt",
    "email" : "robert@mail.com",
    "createdDate" : ISODate("2018-03-08T14:26:16.484Z"),
    "__v" : 0
}

/* 7 */
{
    "_id" : ObjectId("5aa14a4c550d8a0a7c2443bb"),
    "firstName" : "Mike",
    "lastName" : "Mee",
    "email" : "mike@mail.com",
    "createdDate" : ISODate("2018-03-08T14:35:56.282Z"),
    "__v" : 0
}

/* 8 */
{
    "_id" : ObjectId("5aa1f9d0384ba605ae83de1e"),
    "firstName" : "Ethan",
    "lastName" : "Hawk",
    "email" : "ethan@mail.com",
    "createdDate" : ISODate("2018-03-09T03:04:48.309Z"),
    "__v" : 0
}

/* 9 */
{
    "_id" : ObjectId("5aa20016384ba605ae83de1f"),
    "firstName" : "Ken",
    "lastName" : "Doe",
    "email" : "ken@mail.com",
    "createdDate" : ISODate("2018-03-09T03:31:34.977Z"),
    "__v" : 0
}

/* 10 */
{
    "_id" : ObjectId("5aa201a7384ba605ae83de20"),
    "firstName" : "Dany",
    "lastName" : "Dawn",
    "email" : "dant@mail.com",
    "createdDate" : ISODate("2018-03-09T03:38:15.447Z"),
    "__v" : 0
}

/* 11 */
{
    "_id" : ObjectId("5aa201c4384ba605ae83de21"),
    "firstName" : "Debby",
    "lastName" : "Hawk",
    "email" : "debby@mail.com",
    "createdDate" : ISODate("2018-03-09T03:38:44.042Z"),
    "__v" : 0
}


//router/index.js
import { createRouter, createWebHistory } from 'vue-router'

import Users from '../views/Users.vue'
import About from '../views/About.vue'
import AddUser from '../views/AddUser.vue'

const routerHistory = createWebHistory()

const routes = [
    {
        path: '/',
        redirect: '/users'
    },
    {
        path: '/users',
        name: Users,
        component: Users
    },
    {
        path: '/about',
        name: About,
        component: About
    },
    {
        path: '/adduser',
        name: AddUser,
        component: AddUser
    }
]

const router = createRouter({
    history: routerHistory,
    routes
})

export default router
//main.js
import { createApp } from 'vue'
import App from './App.vue'

import router from './router'

import './index.css'
import 'bootstrap'
import 'bootstrap/dist/css/bootstrap.min.css'

createApp(App).use(router).mount('#app')

//App.vue
<template>
  <div>
    <img alt="Vue logo" src="./assets/logo.png" />
    <h1>EGCO427</h1>
    <router-view/>
  </div>
</template>

<script>


export default {
  name: 'App',
  components: {
   
  }
}
</script>

//views/Users.vue
<template>
    <div class="container">
        <h1>List of Users</h1>
        <div class="container">
          <div class="row">
            <div class="col-lg-12">
              <div class="input-group">
                <input type="text" class="form-control" placeholder="Search for..." v-model="search">
                <span class="input-group-btn">
                  &nbsp;&nbsp;<button class="btn btn-primary" type="button">
                    <span class="glyphicon glyphicon-search" aria-hidden="true"></span>
                    Search
                  </button>
                </span>
              </div><!-- /input-group -->
            </div><!-- /.col-lg-6 -->
          </div><!-- /.row -->
        </div>
        <br>
        <table class="table table-stripped table-borderes">
            <thead>
                <tr>
                <th class="center">First Name</th>
                <th class="center">Last Name</th>
                <th class="center">Email</th>
                <th class="center">Action</th>
                </tr>
            </thead>
            <tbody>
                <!-- <tr v-for="user_alias in filterUsers" v-bind:key="user_alias.id"> -->
                <tr v-for="user_alias in filterUsers" v-bind:key="user_alias.id">
                    <td class="text-left">{{ user_alias.firstName }}</td>
                    <td class="text-left">{{ user_alias.lastName }}</td>
                    <td class="text-left">{{ user_alias.email }}</td>
                    <td class="text-left">
                        <!-- <router-link :to="{ path: 'userupdate', name: 'UpdateUser', params:{userId: user_alias._id} }">
                          <button class="btn btn-xs btn-warning">Edit</button>&nbsp;
                        </router-link>    -->
                         <router-link to="/">
                          <!-- <button class="btn btn-xs btn-danger" data-toggle="modal" data-target=".bd-example-modal-sm" @click="DELETE(user_alias._id)"><span class="glyphicon glyphicon-trash">Delete</span></button> -->
                          <button class="btn btn-xs btn-danger" data-toggle="modal" data-target=".bd-example-modal-sm" @click="delUser(user_alias._id)"><span class="glyphicon glyphicon-trash">Delete</span></button>
                        </router-link>
                    </td>
                </tr>
            </tbody>
        </table>
        <router-link to="/adduser">
            <button class="btn btn-large btn-block btn-success full-width">Add User</button>
        </router-link>
        <br>
    <div class="modal fade bd-example-modal-sm" id="myModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
      <div class="modal-dialog" role="document">
        <div class="modal-content">
          <div class="modal-header">
            <h1 class="modal-title" id="exampleModalLabel">Are you sure?</h1>
            <button type="button" class="close" data-dismiss="modal" aria-label="Close">
              <span aria-hidden="true">&times;</span>
            </button>
          </div>
          <div class="modal-body">
            Are you sure you want to delete this item? </div>
          <div class="modal-footer">
              <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
              <router-link to="/users">
                 <button type="button" class="btn btn-danger" @click="delUser(uid)">Delete</button>
              </router-link>
          </div>
        </div>
      </div>
    </div>
    </div>
</template>

<script>
import axios from 'axios'
import $ from 'jquery'
export default {
  name: 'Users',

  data() {
    return {
        Users: [],
        search: '',
        uid: ''
    }
  },
  mounted () {
      axios.get('http://localhost:5000/users')
        .then((response)=>{
            console.log(response.data)
            this.Users = response.data
        })
        .catch((error)=>{
            console.log(error)
        })
  },
  computed : {
    filterUsers: function(){
        return this.Users.filter((user)=>{
            return user.firstName.match(this.search)
        })
    }
  },
  methods: {
      DELETE(id) {
          this.uid = id
      },
      delUser(UserId){
          axios.delete('http://localhost:5000/users/'+UserId)
        .then(()=>{
            console.log('Delete userId: '+UserId)
        })
        .catch((error)=>{
            console.log(error)
        })
        window.location.reload()
      }
  }
}
</script>



//views/AddUser.vue
<template>
  <div class="container">
    <form>
      <div class="well">
        <h4>Add User</h4>
        <div class="form-group" >
          <label class="pull-left">First Name: </label>
          <input type="text" class="form-control" placeholder="First Name" v-model="User.firstName">
        </div>
        <div class="form-group" >
          <label class="pull-left">Last Name: </label>
          <input type="text" class="form-control" placeholder="Last Name" v-model="User.lastName">
        </div>
        <div class="form-group" >
          <label class="pull-left">Email: </label>
          <input type="text" class="form-control" placeholder="Email" v-model="User.email">
        </div>
      </div>
      
      <button type="submit" class="btn btn-large btn-block btn-primary full-width" @click="addToAPI">Submit</button>
      <router-link to="/">
        <button class="btn btn-large btn-block btn-success full-width">Go to User List Page</button>  
      </router-link>  
    </form>
  </div>

</template>
<script>
import axios from 'axios'
export default {
  name: 'AddUser',
  data() {
    return {
        User: {
            firstName: '',
            lastName: '',
            email: ''
        } 
        
    }
  },
  methods: {
      addToAPI () {
          let newUser ={
              firstName: this.User.firstName,
              lastName: this.User.lastName,
              email: this.User.email
          }
        axios.post('http://localhost:5000/users', newUser)
        .then((response)=>{
            console.log(response.data)
        })
        .catch((error)=>{
            console.log(error)
        })
      }
  }
}
</script>


//views/UpdateUser.vue
<template>
  <div class="container">
    <form>
      <div class="well">
        <h4>Update User</h4>
        <div class="form-group" >
          <label class="pull-left">First Name: </label>
          <input type="text" class="form-control" placeholder="First Name" v-model="User.firstName">
        </div>
        <div class="form-group" >
          <label class="pull-left">Last Name: </label>
          <input type="text" class="form-control" placeholder="Last Name" v-model="User.lastName">
        </div>
        <div class="form-group" >
          <label class="pull-left">Email: </label>
          <input type="email" class="form-control" placeholder="Email" v-model="User.email">
        </div>
      </div>
      <router-link to="/">
        <button type="submit" class="btn btn-large btn-block btn-primary full-width" @click="updateToAPI">Submit</button>
        <button class="btn btn-large btn-block btn-success full-width">Back to User Page</button>
      </router-link>
    </form>
  </div>  
</template>